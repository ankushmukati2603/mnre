<style>
    .pane_image_solar {
        height: 330px
    }
</style>


<!-- Chart code -->
<script>
    /* Added By Ashutosh */
    var base_url = 'http://10.246.24.71/';
    $(document).ready(function () {
        $('#_timeline_0').find('.timeline-year').addClass('selected');
        var getFirstTimeLineYear = $('#_timeline_0').find('.selected').text();
        axios.get(`${base_url}solarapplications?year=${getFirstTimeLineYear}`).then(response => response.data).catch(error => console.log(error)).then(timelineTiles => {
            $('._street_lighting').text(timelineTiles[0].street_light);
            $('._home_lighting').text(timelineTiles[0].home_light);
            $('._solar_lantern').text(timelineTiles[0].lantern_lamp);
            $('._solar_pumps').text(timelineTiles[0].pump);
            $('._stand_alone').text(timelineTiles[0].standalone);
        });
    })

    var loadTimelineTilesData = function (selectedYear) {
        axios.get(`${base_url}solarapplications?year=${selectedYear}`).then(response => response.data).catch(error => console.log(error)).then(timelineTiles => {
            $('._street_lighting').text(timelineTiles[0].street_light);
            $('._home_lighting').text(timelineTiles[0].home_light);
            $('._solar_lantern').text(timelineTiles[0].lantern_lamp);
            $('._solar_pumps').text(timelineTiles[0].pump);
            $('._stand_alone').text(timelineTiles[0].standalone);
        });
    }
    /* Added By Ashutosh */
    //Data
    //var data = solarData
    var reducer = 0
    axios.get('http://10.246.24.71/energydata?_limit=1000&energy=Solar Energy').then(response => response.data).catch(error => console.log(error)).then(wata => {
        if (wata) {


            var data = wata
            var one = data.filter(d => d.year == '2016');

            var two = data.filter(d => d.year == '2017')
            var three = data.filter(d => d.year == '2018')
            var four = data.filter(d => d.year == '2019')
            reducer = four.reduce((acc, curr, indexValue, array) => {
                return acc + Number(curr.value);
            }, 0)
            var totalPower = 100
            am4core.options.commercialLicense = true;
            // Themes begin
            am4core.useTheme(am4themes_animated);
            // Themes end

            window.onload = function () {

                $('.bd-solar').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #fdbf2c solid')
                })
                $('.bd-wind').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #1796cd solid')
                })
                $('.bd-bmp').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #3d6325 solid')
                })
                $('.bd-gas').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #516a9e solid')
                })
                $('.bd-bgp').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #88a339 solid')
                })
                $('.bd-hydro').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #179ba3 solid')
                })
                $('.bd-we').click(function () {
                    $('.border_orage_tabs').css('border-bottom', '9px #c7721f solid')
                })
            };


            am4core.ready(function () {
                am4core.options.commercialLicense = true;
                var currentMap = 'indiaHigh'
                var title = ''
                var chart = am4core.create("chartdiv", am4maps.MapChart);
                chart.seriesContainer.draggable = false;
                chart.seriesContainer.resizable = false;
                chart.chartContainer.wheelable = false;
                chart.maxZoomLevel = 1;
                // Set map definition
                chart.geodataSource.url = "/data/" + currentMap + ".json";
                chart.geodataSource.events.on("parseended", function (ev) {
                    /*var data = [];
                    for (var i = 0; i < ev.target.data.features.length; i++) {
                        var foundOne = one.find(function (o) {
                            return o.code == ev.target.data.features[i].id
                        })
                        if (foundOne) {
                            data.push({
                                id: ev.target.data.features[i].id,
                                value: foundOne["value"],
                                value_2: foundOne["id"],
                            })
                        } else {
                            data.push({
                                id: ev.target.data.features[i].id,
                                value: "Not Available",
                                value_2: "Not Available",
                            })
                        }
              
                    }
                    polygonSeries.data = data; */
                    $('.timeline:nth-of-type(1)').click()

                })

                $('.timeline').click(function (e) {
                    var choice = $(e.currentTarget).children('.timeline-content').children('.timeline-year').text();
                    loadTimelineTilesData(choice);
                    document.querySelector('._select_year span').textContent = 'As on 31st March ' + choice;
                    if (choice == '2016') {
                        var dwata = [];
                        for (var i = 0; i < chart["_dataSources"].geodata.data.features.length; i++) {
                            var foundOne = one.find(function (o) {
                                return o.code == chart["_dataSources"].geodata.data.features[i].id
                            })
                            if (foundOne) {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: foundOne["value"],
                                })
                            } else {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: "Not Available",
                                    value_2: "Not Available",
                                })
                            }
                        }
                        polygonSeries.data = dwata;
                    } else if (choice == '2017') {
                        var dwata = [];
                        for (var i = 0; i < chart["_dataSources"].geodata.data.features.length; i++) {
                            var foundOne = two.find(function (o) {
                                return o.code == chart["_dataSources"].geodata.data.features[i].id
                            })
                            if (foundOne) {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: foundOne["value"],
                                })
                            } else {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: "Not Available",
                                    value_2: "Not Available",
                                })
                            }

                        }
                        polygonSeries.data = dwata;
                    } else if (choice == '2018') {
                        var dwata = [];
                        for (var i = 0; i < chart["_dataSources"].geodata.data.features.length; i++) {
                            var foundOne = three.find(function (o) {
                                return o.code == chart["_dataSources"].geodata.data.features[i].id
                            })
                            if (foundOne) {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: foundOne["value"]
                                })
                            } else {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: "Not Available",
                                    value_2: "Not Available",
                                })
                            }

                        }
                        polygonSeries.data = dwata;
                    } else if (choice == '2019') {
                        var dwata = [];
                        for (var i = 0; i < chart["_dataSources"].geodata.data.features.length; i++) {
                            var foundOne = four.find(function (o) {
                                return o.code == chart["_dataSources"].geodata.data.features[i].id
                            })
                            if (foundOne) {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: foundOne["value"]
                                })
                            } else {
                                dwata.push({
                                    id: chart["_dataSources"].geodata.data.features[i].id,
                                    value: "Not Available",
                                    value_2: "Not Available",
                                })
                            }

                        }
                        polygonSeries.data = dwata;
                    }
                })
                // Set projection
                chart.projection = new am4maps.projections.Mercator();

                // Create map polygon series
                var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());

                //Set min/max fill color for each area
                polygonSeries.heatRules.push({
                    property: "fill",
                    target: polygonSeries.mapPolygons.template,
                    min: chart.colors.getIndex(1).brighten(1),
                    max: chart.colors.getIndex(2).brighten(-0.3)
                });

                // Make map load polygon data (state shapes and names) from GeoJSON
                polygonSeries.useGeodata = true;

                /* Set Tooltip Color */
                polygonSeries.tooltip.getFillFromObject = false;
                polygonSeries.tooltip.getStrokeFromObject = false;
                polygonSeries.tooltip.background.fill = am4core.color("#fceecf");
                polygonSeries.tooltip.fontFamily = 'Gotham-Book';
                polygonSeries.tooltip.fontSize = '13px';

                var shadow = polygonSeries.tooltip.background.filters.getIndex(0);
                shadow.dx = 2;
                shadow.dy = 2;
                shadow.blur = 5;
                shadow.color = am4core.color("#fff");
                /* Set Tooltip Color */

                // Configure series tooltip
                var polygonTemplate = polygonSeries.mapPolygons.template;
                // polygonTemplate.fill = am4core.color("#74B266");
                polygonTemplate.tooltipHTML = "<div class='_tooltip_main'>" +
                    "<b class='_heading'>{name}</b>" +
                    "<p class='_text'><b>Installed Capacity :</b> {value} MW</p>"
                polygonTemplate.nonScalingStroke = false;
                polygonTemplate.strokeWidth = 0;
                // Create hover state and set alternative fill color
                var hs = polygonTemplate.states.create("hover");
                hs.properties.fill = "#fdbf2c"

                //  $('g').click(function () {
                //    location.href = '/mp'
                //})

                polygonTemplate.events.on("hit", function (event) {
                    console.log(event)
                });

                // Create chart instance
                var chart1 = am4core.create("chartdiv2", am4charts.RadarChart);

                // Add data
                chart1.data = [{
                    "category": "Installed Capacity (In GW)",
                    "value": reducer / 1000,
                    "full": totalPower
                }, {
                    "category": "Overall Target(In GW)",
                    "value": totalPower,
                    "full": totalPower
                }];

                // Make chart not full circle
                chart1.startAngle = -90;
                chart1.endAngle = 180;
                chart1.innerRadius = am4core.percent(20);

                // Set number format
                chart1.numberFormatter.numberFormat = "#.#";

                var label = chart1.createChild(am4core.Label);
                label.text = "Overall Target & Installed Capacity";
                label.fontSize = 17;
                label.align = "center";

                // Create axes
                var categoryAxis = chart1.yAxes.push(new am4charts.CategoryAxis());
                categoryAxis.dataFields.category = "category";
                categoryAxis.renderer.grid.template.location = 0;
                categoryAxis.renderer.grid.template.strokeOpacity = 0;
                categoryAxis.renderer.labels.template.horizontalCenter = "right";
                categoryAxis.renderer.labels.template.fontWeight = 500;
                categoryAxis.renderer.labels.template.adapter.add("fill", function (fill, target) {
                    return (target.dataItem.index >= 0) ? chart1.colors.getIndex(target.dataItem.index) : fill;
                });
                categoryAxis.renderer.minGridDistance = 10;

                var valueAxis = chart1.xAxes.push(new am4charts.ValueAxis());
                valueAxis.renderer.grid.template.strokeOpacity = 0;
                valueAxis.min = 0;
                valueAxis.max = totalPower;
                valueAxis.strictMinMax = true;

                // Create series
                var series1 = chart1.series.push(new am4charts.RadarColumnSeries());
                series1.dataFields.valueX = "full";
                series1.dataFields.categoryY = "category";
                series1.clustered = false;
                series1.columns.template.fill = new am4core.InterfaceColorSet().getFor("alternativeBackground");
                series1.columns.template.fillOpacity = 0.08;
                series1.columns.template.cornerRadiusTopLeft = 20;
                series1.columns.template.strokeWidth = 0;
                series1.columns.template.radarColumn.cornerRadius = 20;

                var series2 = chart1.series.push(new am4charts.RadarColumnSeries());
                series2.dataFields.valueX = "value";
                series2.dataFields.categoryY = "category";
                series2.clustered = false;
                series2.columns.template.strokeWidth = 0;
                series2.columns.template.tooltipText = "{category}: [bold]{value}[/]";
                series2.columns.template.radarColumn.cornerRadius = 20;

                series2.columns.template.adapter.add("fill", function (fill, target) {
                    return chart1.colors.getIndex(target.dataItem.index);
                });

                // Add cursor
                chart1.cursor = new am4charts.RadarCursor();

            });

        }
    })
</script>
<style>
    .energy_link {
        color: black;
        text-decoration: none;
    }

    .energy_link:hover {
        color: black;
        text-decoration: underline;
        transition: 0.9ms ease-in;
    }

    .summary__energy {
        height: 55px;
    }
</style>
<div class="container wde {{banner_background}}">
    <h1 class="text-center wdet {{banner_background}}">
        {{page_title}}
    </h1>
</div>
<main class="mr-5 ml-5">
    <div class="hdpart">
        <div class="col-sm-12 mt-3">
            <h2 class="energtext text-center">Overview</h2>
            <div class="margin_boo">
                {{{CURRENT_STATUS}}}
            </div>
        </div>

    </div>

    <div class="graph-top">
        <div class="row">
            <div class="col">
            </div>
            <div class="col-sm-6">
            </div>
        </div>
    </div>

    <div class="_timeline_main">
        <div class="_timeline_grid">
            <div class="main-timeline">
                {{#each timeline}}
                <div class="timeline" id="_timeline_{{@index}}">
                    <div class="timeline-content">
                        <div class="timeline-year">{{this.year}}</div>
                        <div class="inner-content">
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>
        </div>
        <div class="col">
            <div id="chartdiv"></div>
            <p class="_select_year"><span></span></p>
        </div>

        <div class="col-sm-4 desktop">

            <div id="chartdiv2"></div>

            {{#if graph_two}}
            <div class="_offgrid_stats">
                <p class="_heading">Offgrid Application</p>
                <ul class="_list">
                    <li>
                        <i>
                            <img src="/img/icons/street_light.png" alt="" />
                        </i>
                        <p>
                            <span class="_street_lighting">--</span>
                            Street Lighting
                        </p>
                    </li>
                    <li>
                        <i>
                            <img src="/img/icons/home_light.png" alt="" />
                        </i>
                        <p>
                            <span class="_home_lighting">--</span>
                            Home Light
                        </p>
                    </li>
                    <li>
                        <i>
                            <img src="/img/icons/solar_lantern.png" alt="" />
                        </i>
                        <p>
                            <span class="_solar_lantern">--</span>
                            Solar Lantern
                        </p>
                    </li>
                    <li>
                        <i>
                            <img src="/img/icons/solar_pumps.png" alt="" />
                        </i>
                        <p>
                            <span class="_solar_pumps">--</span>
                            Solar Pumps
                        </p>
                    </li>
                    <li>
                        <i>
                            <img src="/img/icons/power_plants.png" alt="" />
                        </i>
                        <p>
                            <span class="_stand_alone">--</span>
                            Stand Alone Power Plants (kW)
                        </p>
                    </li>
                </ul>
            </div>
            {{/if}}
        </div>


    </div>
    <div class="mobile-circle mobile">
        <div class="row">
            <div class="col">

                <div id="chartdiv3"></div>

            </div>

            <div class="col">
                {{#if graph_two}}
                <div class="testdt">
                    <img src="/img/2015-16.png" class="image_map_right_second first" alt="">
                    <img src="/img/2016-17.png" class="image_map_right_second second" alt="">
                    <img src="/img/2017-18.png" class="image_map_right_second third" alt="">
                    <img src="/img/2018-19.png" class="image_map_right_second fourth" alt="">
                </div>
                {{/if}}
            </div>
        </div>
    </div>
    {{#if panel}}
    <div class="">
        <div class="card-deck">
            <div class="card">
                <div class="card-img-top">
                    <img src="/img/solar/solar_offgrid.jpg" class="card-img-top" alt="...">
                </div>

                <div class="card-body" style="padding-left:0">
                    <h5 class="card-title">Off-Grid</h5>
                    <!-- <p class="card-text">{{CARD_ONE.SUMMARY}}</p> -->
                    <a href="/solar/solar-offgrid" class="btn btn-primary">Read More</a>
                </div>
            </div>

            <div class="card">
                <div class="card-img-top">
                    <img src="/img/solar/solar_ongrid.jpg" class="card-img-top" alt="...">
                </div>

                <div class="card-body" style="padding-left:0">
                    <h5 class="card-title">Grid Connected</h5>
                    <!-- <p class="card-text">{{CARD_TWO.SUMMARY}}</p> -->
                    <a href="/solar/solar-ongrid" class="btn btn-primary">Read More</a>
                </div>
            </div>
        </div>
    </div>
    {{/if}}
    <div class="thboxes">
        <div class="_overview_panels">
            <div class="_inner_panel">
                <a class="energy_link" href="{{PANE_ONE_LINK}}">
                    <h2 class="polwindt">{{PANE_ONE_TITLE}}</h2>
                    <div class="_img_wrapper">
                        <img src="{{PANE_ONE_IMAGE}}">
                    </div>
                </a>
            </div>
            <div class="_inner_panel">
                <a class="energy_link" href="{{PANE_TWO_LINK}}">
                    <h2 class="scwindt">{{PANE_TWO_TITLE}}</h2>
                    <div class="_img_wrapper">
                        <img src="{{PANE_TWO_IMAGE}}">
                    </div>
                </a>
            </div>
            <div class="_inner_panel">
                <a class="energy_link" href="{{PANE_THREE_LINK}}">
                    <h2 class="manwindt">{{PANE_THREE_TITLE}}</h2>
                    <div class="_img_wrapper">
                        <img src="{{PANE_THREE_IMAGE}}">
                    </div>
                </a>
            </div>
        </div>
    </div>
    </div>


    <!-- <div class="art-header mt-5">
        <h2 class="eneh2 text-center">Projects</h2>
    </div>
    <div class="article">
        <div class="row grp">
            <div class="col-sm-4 mt-5">
                <div class="project">
                    <img src="{{project_1}}" width="100%">
                    <p class="mt-2 projects">"Lorem ipsum dolor sit amet, consectetur adipiscing elit...
                    </p>
                    <p class="mt-3">View all &nbsp;&nbsp;<i class="fas fa-arrow-circle-right"></i></p>
                </div>
            </div>
            <div class="col-sm-4 mt-5">
                <div class="project">
                    <img src="{{project_2}}" width="100%">
                    <p class="mt-2 projects">"Lorem ipsum dolor sit amet, consectetur adipiscing elit...
                    </p>
                    <p class="mt-3">View all &nbsp;&nbsp;<i class="fas fa-arrow-circle-right"></i></p>
                </div>
            </div>
            <div class="col-sm-4 mt-5">
                <div class="project">
                    <img src="{{project_3}}" width="100%">
                    <p class="mt-2 projects">"Lorem ipsum dolor sit amet, consectetur adipiscing elit...
                    </p>
                    <p class="mt-3">View all &nbsp;&nbsp;<i class="fas fa-arrow-circle-right"></i></p>
                </div>
            </div>
        </div>
    </div> -->
    {{!-- <div class="knw-reading ">

        <div class="row grp justify-content-center">
            <div class="col-sm-4 mt-5">
                <div class="project">
                    <img src="/img/lab_policy.jpg" width="100%">
                    <p class="mt-2 projects">LAB POLICY</p>
                    <a href="/{{short_code}}/lab-policies">
                        <p class="mt-3">View all &nbsp;&nbsp;<i class="fas fa-arrow-circle-right"></i></p>
                    </a>
                </div>
            </div>
            <div class="col-sm-4 mt-5">
                <div class="project">
                    <img src="/img/akshay_urja.jpg" width="100%">
                    <p class="mt-2 projects">Akshay Urja</p>
                    <a href="/knowledge-center/akshay-urja">
                        <p class="mt-3">View all &nbsp;&nbsp;<i class="fas fa-arrow-circle-right"></i></p>
                    </a>
                </div>
            </div>
        </div>

    </div> --}}
</main>